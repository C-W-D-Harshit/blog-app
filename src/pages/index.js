import Head from "next/head";
import Big_card from "../../components/cards/Big_card";
import Link from "next/link";
// import { baseUrl } from "../../helpers/baseUrl";
import { useEffect, useState } from "react";
import Small_card from "../../components/cards/Small_card";
import Mid_card from "../../components/cards/Mid_card";
import baseUrl from "../../helpers/baseUrl";

export default function Home({ travelBlogs, blogs, foodBlogs, healthBlogs }) {
  const [travelIndex1, setTravelIndex1] = useState(null);
  const [travelIndex2, setTravelIndex2] = useState(null);
  const [travel1, setTravel1] = useState([]);
  const [travel2, setTravel2] = useState([]);
  const [foodIndex1, setFoodIndex1] = useState(null);
  const [foodIndex2, setFoodIndex2] = useState(null);
  const [food1, setFood1] = useState([]);
  const [food2, setFood2] = useState([]);
  const [n, setN] = useState(3);

  // console.log(travelBlogs[(0, 1)]);
  useEffect(() => {
    let a = Math.floor(Math.random() * travelBlogs.length);
    let b = Math.floor(Math.random() * travelBlogs.length);
    let c = Math.floor(Math.random() * foodBlogs.length);
    let d = Math.floor(Math.random() * foodBlogs.length);
    if (a === b) {
      a = Math.floor(Math.random() * travelBlogs.length);
      b = Math.floor(Math.random() * travelBlogs.length);
    }
    if (c === d) {
      c = Math.floor(Math.random() * foodBlogs.length);
      d = Math.floor(Math.random() * foodBlogs.length);
    }
    setFoodIndex1(c);
    setFoodIndex2(d);
    console.log();
    const food1 = foodBlogs[foodIndex1];
    const food2 = foodBlogs[foodIndex2];
    setFood1(food1);
    setFood2(food2);

    setTravelIndex1(a);
    setTravelIndex2(b);
    const travel1 = travelBlogs[travelIndex1];
    const travel2 = travelBlogs[travelIndex2];
    setTravel1(travel1);
    setTravel2(travel2);
    let j = healthBlogs.length;
    setN(j);
  }, [
    travelBlogs,
    travelIndex1,
    travelIndex2,
    foodBlogs,
    foodIndex1,
    foodIndex2,
    healthBlogs,
  ]);
  if (!travelBlogs) {
    return <h1>Loading...</h1>;
  }

  // console.log(travel1);
  return (
    <>
      <Head>
        <title>Blog - App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="home">
        <div>
          <div className="home__title">
            <p>Travel</p>
            <Link href="/travel">
              <p>See more</p>
            </Link>
          </div>
          {travel1 || travel2 ? (
            <>
              <Big_card
                id={travel1._id}
                title={travel1.title}
                content={travel1.content}
                date={travel1.createdAt}
                img={travel1.imageUrl}
                views={travel1.views}
                category={travel1.category}
              />
              <Big_card
                id={travel2._id}
                title={travel2.title}
                content={travel2.content}
                date={travel2.createdAt}
                img={travel2.imageUrl}
                views={travel2.views}
                category={travel1.category}
              />
            </>
          ) : (
            <h3>Loading...</h3>
          )}
        </div>
        <div>
          <div>
            <div className="home__title">
              <p>Latest</p>
              <Link href="/blogs">
                <p>See more</p>
              </Link>
            </div>
            <div>
              {blogs &&
                blogs
                  .reverse()
                  .slice(0, 3)
                  .map((blog) => (
                    <Small_card
                      key={blog._id}
                      id={blog._id}
                      category={blog.category}
                      date={blog.createdAt}
                      title={blog.title}
                    />
                  ))}
            </div>
          </div>

          <div>
            <div className="home__title">
              <p>Food</p>
              <Link href="/food">
                <p>See more</p>
              </Link>
            </div>
            <div>
              {food1 ? (
                <Mid_card
                  id={food1._id}
                  title={food1.title}
                  date={food1.createdAt}
                  img={food1.imageUrl}
                  category={food1.category}
                />
              ) : (
                <h3>Loading...</h3>
              )}
              {food2 ? (
                <Mid_card
                  id={food2._id}
                  title={food2.title}
                  date={food2.createdAt}
                  img={food2.imageUrl}
                  category={food2.category}
                />
              ) : (
                <h3>Loading...</h3>
              )}
            </div>
          </div>
        </div>
        <div>
          <div className="home__title">
            <p>Health</p>
            <Link href="/health">
              <p>See more</p>
            </Link>
          </div>
          <div>
            {healthBlogs &&
              healthBlogs
                .reverse()
                .slice(0, 2)
                .map((blog) => (
                  <Mid_card
                    key={blog._id}
                    id={blog._id}
                    category={blog.category}
                    date={blog.createdAt}
                    title={blog.title}
                    img={blog.imageUrl}
                  />
                ))}
            {healthBlogs &&
              healthBlogs
                .slice(2, n)
                .map((blog) => (
                  <Small_card
                    key={blog._id}
                    id={blog._id}
                    category={blog.category}
                    date={blog.createdAt}
                    title={blog.title}
                  />
                ))}
          </div>
        </div>
      </main>
    </>
  );
}

export async function getServerSideProps() {
  const res1 = await fetch(`${baseUrl}/api/blogs?category=travel`);
  const data1 = await res1.json();
  const res = await fetch(`${baseUrl}/api/blogs`);
  const data = await res.json();
  const res2 = await fetch(`${baseUrl}/api/blogs?category=food`);
  const data2 = await res2.json();
  const res3 = await fetch(`${baseUrl}/api/blogs?category=health`);
  const data3 = await res3.json();

  return {
    props: {
      travelBlogs: data1.blogs,
      blogs: data.blogs,
      foodBlogs: data2.blogs,
      healthBlogs: data3.blogs,
    },
  };
}
